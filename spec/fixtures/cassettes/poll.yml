---
http_interactions:
- request:
    method: post
    uri: https://otx.alienvault.com/taxii/discovery
    body:
      encoding: UTF-8
      string: <taxii_11:Discovery_Request xmlns:taxii="http://taxii.mitre.org/messages/taxii_xml_binding-1"
        xmlns:taxii_11="http://taxii.mitre.org/messages/taxii_xml_binding-1.1" xmlns:tdq="http://taxii.mitre.org/query/taxii_default_query-1"
        message_id="00168625722101966955"/>
    headers:
      Accept:
      - application/xml
      User-Agent:
      - rest-client/2.1.0 (linux x86_64) ruby/3.1.2p20
      X-Taxii-Services:
      - urn:taxii.mitre.org:services:1.1
      Content-Type:
      - application/xml
      X-Taxii-Accept:
      - urn:taxii.mitre.org:message:xml:1.1
      X-Taxii-Content-Type:
      - urn:taxii.mitre.org:message:xml:1.1
      X-Taxii-Protocol:
      - urn:taxii.mitre.org:protocol:https:1.0
      Content-Length:
      - '263'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - otx.alienvault.com
      Authorization:
      - Basic XXX
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Content-Length:
      - '1806'
      Connection:
      - keep-alive
      Date:
      - Thu, 08 Jun 2023 20:47:01 GMT
      Server:
      - gunicorn
      X-Taxii-Content-Type:
      - urn:taxii.mitre.org:message:xml:1.1
      X-Taxii-Protocol:
      - urn:taxii.mitre.org:protocol:https:1.0
      X-Taxii-Services:
      - urn:taxii.mitre.org:services:1.1
      X-Frame-Options:
      - SAMEORIGIN
      X-Remote-User-Name:
      - crondaemon
      X-Otx-Active:
      - '1'
      Vary:
      - Accept-Encoding
      Access-Control-Allow-Origin:
      - "*"
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 f563f6fe63f48d6323a4aa2bc75a15b2.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MXP63-P2
      X-Amz-Cf-Id:
      - 2IUPj57zWpe81GDgjppn7IPy5X5uLFJYxUvE1H3FifOSl8mTFFlXlA==
    body:
      encoding: UTF-8
      string: |
        <taxii_11:Discovery_Response xmlns:taxii="http://taxii.mitre.org/messages/taxii_xml_binding-1" xmlns:taxii_11="http://taxii.mitre.org/messages/taxii_xml_binding-1.1" xmlns:tdq="http://taxii.mitre.org/query/taxii_default_query-1" message_id="8453212940337206332" in_response_to="00168625722101966955">
          <taxii_11:Service_Instance service_type="DISCOVERY" service_version="urn:taxii.mitre.org:services:1.1" available="true">
            <taxii_11:Protocol_Binding>urn:taxii.mitre.org:protocol:https:1.0</taxii_11:Protocol_Binding>
            <taxii_11:Address>https://otx.alienvault.com/taxii/discovery</taxii_11:Address>
            <taxii_11:Message_Binding>urn:taxii.mitre.org:message:xml:1.1</taxii_11:Message_Binding>
            <taxii_11:Message>OTX Taxii Discovery</taxii_11:Message>
          </taxii_11:Service_Instance>
          <taxii_11:Service_Instance service_type="COLLECTION_MANAGEMENT" service_version="urn:taxii.mitre.org:services:1.1" available="true">
            <taxii_11:Protocol_Binding>urn:taxii.mitre.org:protocol:https:1.0</taxii_11:Protocol_Binding>
            <taxii_11:Address>https://otx.alienvault.com/taxii/collections</taxii_11:Address>
            <taxii_11:Message_Binding>urn:taxii.mitre.org:message:xml:1.1</taxii_11:Message_Binding>
            <taxii_11:Message>OTX Taxii Collections</taxii_11:Message>
          </taxii_11:Service_Instance>
          <taxii_11:Service_Instance service_type="POLL" service_version="urn:taxii.mitre.org:services:1.1" available="true">
            <taxii_11:Protocol_Binding>urn:taxii.mitre.org:protocol:https:1.0</taxii_11:Protocol_Binding>
            <taxii_11:Address>https://otx.alienvault.com/taxii/poll</taxii_11:Address>
            <taxii_11:Message_Binding>urn:taxii.mitre.org:message:xml:1.1</taxii_11:Message_Binding>
            <taxii_11:Message>OTX Taxii Polling</taxii_11:Message>
          </taxii_11:Service_Instance>
        </taxii_11:Discovery_Response>
  recorded_at: Thu, 08 Jun 2023 20:47:01 GMT
- request:
    method: post
    uri: https://otx.alienvault.com/taxii/collections
    body:
      encoding: UTF-8
      string: <taxii_11:Collection_Information_Request xmlns:taxii="http://taxii.mitre.org/messages/taxii_xml_binding-1"
        xmlns:taxii_11="http://taxii.mitre.org/messages/taxii_xml_binding-1.1" xmlns:tdq="http://taxii.mitre.org/query/taxii_default_query-1"
        message_id="00168625722101966955"/>
    headers:
      Accept:
      - application/xml
      User-Agent:
      - rest-client/2.1.0 (linux x86_64) ruby/3.1.2p20
      X-Taxii-Services:
      - urn:taxii.mitre.org:services:1.1
      Content-Type:
      - application/xml
      X-Taxii-Protocol:
      - urn:taxii.mitre.org:protocol:https:1.0
      Content-Length:
      - '276'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - otx.alienvault.com
      Authorization:
      - Basic XXX
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Content-Length:
      - '1452'
      Connection:
      - keep-alive
      Date:
      - Thu, 08 Jun 2023 20:47:01 GMT
      Server:
      - gunicorn
      X-Taxii-Content-Type:
      - urn:taxii.mitre.org:message:xml:1.1
      X-Taxii-Protocol:
      - urn:taxii.mitre.org:protocol:https:1.0
      X-Taxii-Services:
      - urn:taxii.mitre.org:services:1.1
      X-Frame-Options:
      - SAMEORIGIN
      X-Remote-User-Name:
      - crondaemon
      X-Otx-Active:
      - '1'
      Vary:
      - Accept-Encoding
      Access-Control-Allow-Origin:
      - "*"
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 bd4e114ece87e9cf66a7eccfeb6c9c4a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MXP63-P2
      X-Amz-Cf-Id:
      - DoXIEFBmEIuWrDoxI1R4zK1Pbt6cT-0DgRzTkC6X7N5bbvON_2FOOA==
    body:
      encoding: UTF-8
      string: |
        <taxii_11:Collection_Information_Response xmlns:taxii="http://taxii.mitre.org/messages/taxii_xml_binding-1" xmlns:taxii_11="http://taxii.mitre.org/messages/taxii_xml_binding-1.1" xmlns:tdq="http://taxii.mitre.org/query/taxii_default_query-1" message_id="4439110867104022579" in_response_to="00168625722101966955">
          <taxii_11:Collection collection_name="user_AlienVault" collection_type="DATA_FEED" available="true">
            <taxii_11:Description>Data feed for user: AlienVault</taxii_11:Description>
            <taxii_11:Polling_Service>
              <taxii_11:Protocol_Binding>urn:taxii.mitre.org:protocol:https:1.0</taxii_11:Protocol_Binding>
              <taxii_11:Address>https://otx.alienvault.com/taxii/poll</taxii_11:Address>
              <taxii_11:Message_Binding>urn:taxii.mitre.org:message:xml:1.1</taxii_11:Message_Binding>
            </taxii_11:Polling_Service>
          </taxii_11:Collection>
          <taxii_11:Collection collection_name="user_crondaemon" collection_type="DATA_FEED" available="true">
            <taxii_11:Description>Data feed for user: crondaemon</taxii_11:Description>
            <taxii_11:Polling_Service>
              <taxii_11:Protocol_Binding>urn:taxii.mitre.org:protocol:https:1.0</taxii_11:Protocol_Binding>
              <taxii_11:Address>https://otx.alienvault.com/taxii/poll</taxii_11:Address>
              <taxii_11:Message_Binding>urn:taxii.mitre.org:message:xml:1.1</taxii_11:Message_Binding>
            </taxii_11:Polling_Service>
          </taxii_11:Collection>
        </taxii_11:Collection_Information_Response>
  recorded_at: Thu, 08 Jun 2023 20:47:02 GMT
- request:
    method: post
    uri: https://otx.alienvault.com/taxii/discovery
    body:
      encoding: UTF-8
      string: <taxii_11:Discovery_Request xmlns:taxii="http://taxii.mitre.org/messages/taxii_xml_binding-1"
        xmlns:taxii_11="http://taxii.mitre.org/messages/taxii_xml_binding-1.1" xmlns:tdq="http://taxii.mitre.org/query/taxii_default_query-1"
        message_id="00168625722201966955"/>
    headers:
      Accept:
      - application/xml
      User-Agent:
      - rest-client/2.1.0 (linux x86_64) ruby/3.1.2p20
      X-Taxii-Services:
      - urn:taxii.mitre.org:services:1.1
      Content-Type:
      - application/xml
      X-Taxii-Accept:
      - urn:taxii.mitre.org:message:xml:1.1
      X-Taxii-Content-Type:
      - urn:taxii.mitre.org:message:xml:1.1
      X-Taxii-Protocol:
      - urn:taxii.mitre.org:protocol:https:1.0
      Content-Length:
      - '263'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - otx.alienvault.com
      Authorization:
      - Basic XXX
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Content-Length:
      - '1806'
      Connection:
      - keep-alive
      Date:
      - Thu, 08 Jun 2023 20:47:02 GMT
      Server:
      - gunicorn
      X-Taxii-Content-Type:
      - urn:taxii.mitre.org:message:xml:1.1
      X-Taxii-Protocol:
      - urn:taxii.mitre.org:protocol:https:1.0
      X-Taxii-Services:
      - urn:taxii.mitre.org:services:1.1
      X-Frame-Options:
      - SAMEORIGIN
      X-Remote-User-Name:
      - crondaemon
      X-Otx-Active:
      - '1'
      Vary:
      - Accept-Encoding
      Access-Control-Allow-Origin:
      - "*"
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 64f80ca426b5a59bdd6397ea5b2d845c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MXP63-P2
      X-Amz-Cf-Id:
      - or96UQMckUsPnBn3t8gQsyJtZoz4b4MhSAh1jWWgMngPq0i-KZlmWg==
    body:
      encoding: UTF-8
      string: |
        <taxii_11:Discovery_Response xmlns:taxii="http://taxii.mitre.org/messages/taxii_xml_binding-1" xmlns:taxii_11="http://taxii.mitre.org/messages/taxii_xml_binding-1.1" xmlns:tdq="http://taxii.mitre.org/query/taxii_default_query-1" message_id="6787448926502804261" in_response_to="00168625722201966955">
          <taxii_11:Service_Instance service_type="DISCOVERY" service_version="urn:taxii.mitre.org:services:1.1" available="true">
            <taxii_11:Protocol_Binding>urn:taxii.mitre.org:protocol:https:1.0</taxii_11:Protocol_Binding>
            <taxii_11:Address>https://otx.alienvault.com/taxii/discovery</taxii_11:Address>
            <taxii_11:Message_Binding>urn:taxii.mitre.org:message:xml:1.1</taxii_11:Message_Binding>
            <taxii_11:Message>OTX Taxii Discovery</taxii_11:Message>
          </taxii_11:Service_Instance>
          <taxii_11:Service_Instance service_type="COLLECTION_MANAGEMENT" service_version="urn:taxii.mitre.org:services:1.1" available="true">
            <taxii_11:Protocol_Binding>urn:taxii.mitre.org:protocol:https:1.0</taxii_11:Protocol_Binding>
            <taxii_11:Address>https://otx.alienvault.com/taxii/collections</taxii_11:Address>
            <taxii_11:Message_Binding>urn:taxii.mitre.org:message:xml:1.1</taxii_11:Message_Binding>
            <taxii_11:Message>OTX Taxii Collections</taxii_11:Message>
          </taxii_11:Service_Instance>
          <taxii_11:Service_Instance service_type="POLL" service_version="urn:taxii.mitre.org:services:1.1" available="true">
            <taxii_11:Protocol_Binding>urn:taxii.mitre.org:protocol:https:1.0</taxii_11:Protocol_Binding>
            <taxii_11:Address>https://otx.alienvault.com/taxii/poll</taxii_11:Address>
            <taxii_11:Message_Binding>urn:taxii.mitre.org:message:xml:1.1</taxii_11:Message_Binding>
            <taxii_11:Message>OTX Taxii Polling</taxii_11:Message>
          </taxii_11:Service_Instance>
        </taxii_11:Discovery_Response>
  recorded_at: Thu, 08 Jun 2023 20:47:02 GMT
- request:
    method: post
    uri: https://otx.alienvault.com/taxii/poll
    body:
      encoding: UTF-8
      string: <taxii_11:Poll_Request xmlns:taxii="http://taxii.mitre.org/messages/taxii_xml_binding-1"
        xmlns:taxii_11="http://taxii.mitre.org/messages/taxii_xml_binding-1.1" xmlns:tdq="http://taxii.mitre.org/query/taxii_default_query-1"
        message_id="00168625722201966955" collection_name="user_AlienVault"><taxii_11:Exclusive_Begin_Timestamp>2023-06-08T16:47:02+02:00</taxii_11:Exclusive_Begin_Timestamp><taxii_11:Poll_Parameters
        allow_asynch="false"><taxii_11:Response_Type>FULL</taxii_11:Response_Type></taxii_11:Poll_Parameters></taxii_11:Poll_Request>
    headers:
      Accept:
      - application/xml
      User-Agent:
      - rest-client/2.1.0 (linux x86_64) ruby/3.1.2p20
      X-Taxii-Services:
      - urn:taxii.mitre.org:services:1.1
      Content-Type:
      - application/xml
      X-Taxii-Accept:
      - urn:taxii.mitre.org:message:xml:1.1
      X-Taxii-Content-Type:
      - urn:taxii.mitre.org:message:xml:1.1
      X-Taxii-Protocol:
      - urn:taxii.mitre.org:protocol:https:1.0
      Content-Length:
      - '540'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - otx.alienvault.com
      Authorization:
      - Basic XXX
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Content-Length:
      - '268969'
      Connection:
      - keep-alive
      Date:
      - Thu, 08 Jun 2023 20:47:03 GMT
      Server:
      - gunicorn
      X-Taxii-Content-Type:
      - urn:taxii.mitre.org:message:xml:1.1
      X-Taxii-Protocol:
      - urn:taxii.mitre.org:protocol:https:1.0
      X-Taxii-Services:
      - urn:taxii.mitre.org:services:1.1
      X-Frame-Options:
      - SAMEORIGIN
      X-Remote-User-Name:
      - crondaemon
      X-Otx-Active:
      - '1'
      Vary:
      - Accept-Encoding
      Access-Control-Allow-Origin:
      - "*"
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 700cde4f0f5657e960ef85bdf58168b6.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MXP63-P2
      X-Amz-Cf-Id:
      - mMfStUbRrSyi4c2SUL1eN8xMfxuehRSuo7whVwqEmaQnQ-Yy-NjQug==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Jun 2023 20:47:04 GMT
recorded_with: VCR 6.1.0
